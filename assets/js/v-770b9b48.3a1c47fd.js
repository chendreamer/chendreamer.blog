"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([[7694],{6145:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-770b9b48",path:"/tool/Mockjs.html",title:"Mockjs",lang:"en-US",frontmatter:{},excerpt:"",headers:[],filePathRelative:"tool/Mockjs.md",git:{updatedTime:1668654002e3,contributors:[]}}},6294:(n,s,a)=>{a.r(s),a.d(s,{default:()=>t});const p=(0,a(6252).uE)('<h1 id="mockjs" tabindex="-1"><a class="header-anchor" href="#mockjs" aria-hidden="true">#</a> Mockjs</h1><p>安装一个node服务，基于express。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> init\n<span class="token function">npm</span> <span class="token function">install</span> express --save\n<span class="token function">npm</span> <span class="token function">install</span> mockjs\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>配置参考手册：点<a href="http://mockjs.com/examples.html" target="_blank">这里</a><br> 示例：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;express&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//引入express</span>\n<span class="token keyword">let</span> Mock <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mockjs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">//引入mock</span>\n\n<span class="token keyword">let</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//实例化express</span>\n\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//允许跨域</span>\n    res<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Origin&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    res<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">&#39;Access-Control-Allow-Methods&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;PUT, GET, POST, DELETE, OPTIONS&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    res<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Headers&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;X-Requested-With&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    res<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">&#39;Access-Control-Allow-Headers&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&#39;/mode/DataOne&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span>Mock<span class="token punctuation">.</span><span class="token function">mock</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token string">&#39;status&#39;</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>\n        <span class="token string">&#39;dataSource|1-9&#39;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">{</span>\n            <span class="token string">&#39;key|+1&#39;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n            <span class="token string">&#39;mockTitle|1&#39;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&#39;肆无忌惮&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token string">&#39;mockContent|1&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;角色精湛主题略荒诞&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;理由太短 是让人不安&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;疑信参半 却无比期盼&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;你的惯犯 圆满&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;别让纠缠 显得 孤单&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token string">&#39;mockAction|1&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;下载&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;试听&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;喜欢&#39;</span><span class="token punctuation">]</span>\n        <span class="token punctuation">}</span><span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\napp<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token string">&#39;8090&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;监听端口 8090&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><p>jquery下使用</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">&quot;http://mockjs.com/dist/mock.js&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>\n\n<span class="token keyword">var</span> fakeData <span class="token operator">=</span> Mock<span class="token punctuation">.</span><span class="token function">mock</span><span class="token punctuation">(</span><span class="token punctuation">{</span>   \n\t\t\t<span class="token string">&quot;userInfo|1-10&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>   <span class="token comment">//生成|num个如下格式名字的数据    </span>\n\t\t\t\t<span class="token string">&quot;id|+1&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token comment">//数字从当前数开始后续依次加一</span>\n\t\t\t\t<span class="token string">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;@cname&quot;</span><span class="token punctuation">,</span><span class="token comment">//名字为随机中文名字</span>\n\t\t\t\t<span class="token string">&quot;ago|18-28&quot;</span><span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span><span class="token comment">//年龄为18-28之间的随机数字</span>\n\t\t\t\t<span class="token string">&quot;sex|1&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;女&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token comment">//性别是数组中的一个，随机的</span>\n\t\t\t\t<span class="token string">&quot;job|1&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;web&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;UI&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;python&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;php&quot;</span><span class="token punctuation">]</span>   <span class="token comment">//工作是数组中的一个  </span>\n\t\t\t<span class="token punctuation">}</span><span class="token punctuation">]</span>  \n\t\t<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>',7),t={render:function(n,s){return p}}}}]);